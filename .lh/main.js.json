{
    "sourceFile": "main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1690832159672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1690840440268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n var questions = [];\n var currentQuestion = 0;\n var score = 0;\n var totQuestions = 0;\n+var timeRemaining = 0;  // Will be set after fetching questions\n \n var quizContainer = document.getElementById('quiz-container');\n var questionEl = document.getElementById('question');\n var choicesEl = document.getElementById('choices');\n@@ -11,10 +12,11 @@\n var resultCont = document.getElementById('result');\n var retryButton;\n var progressBar = document.getElementById('progress');\n var scoreEl = document.getElementById('score');\n+var timerEl = document.getElementById('timer');\n \n-fetch('https://opentdb.com/api.php?amount=30&category=21&difficulty=medium&type=multiple')\n+fetch('https://opentdb.com/api.php?amount=15&category=17&difficulty=medium&type=multiple')\n     .then(response => response.json())\n     .then(data => {\n         questions = data.results.map(item => ({\n             question: item.question,\n@@ -34,8 +36,13 @@\n         });\n \n         // Now you have your questions array ready\n         totQuestions = questions.length;\n+\n+        // Set time remaining based on number of questions (30 seconds per question)\n+        timeRemaining = totQuestions * 30;\n+\n+        // Load the first question\n         loadQuestion(currentQuestion);\n     })\n     .catch(error => console.error(error));\n \n@@ -43,11 +50,12 @@\n     var q = questions[questionIndex];\n     questionEl.textContent = (questionIndex + 1) + '. ' + q.question;\n     choicesEl.innerHTML = '';\n     var buttonColors = [\"#007BFF\", \"#28a745\", \"#dc3545\", \"#ffc107\"]; // blue, green, red, yellow\n+    var choicesLabels = [\"A\", \"B\", \"C\", \"D\"];\n     for(var i = 0; i < q.choices.length; i++) {\n         var choice = document.createElement(\"button\");\n-        choice.textContent = q.choices[i];\n+        choice.textContent = choicesLabels[i] + ': ' + q.choices[i];\n         choice.id = 'btn' + i;\n         choice.style.backgroundColor = buttonColors[i];\n         choicesEl.appendChild(choice);\n         choice.addEventListener(\"click\", function(){\n@@ -69,10 +77,25 @@\n     }\n \n     // Update progress bar\n     progressBar.style.width = ((questionIndex + 1) / totQuestions * 100) + '%';\n+\n+    // Start timer\n+    startTimer();\n }\n \n+function startTimer() {\n+    timerEl.textContent = 'Time Remaining: ' + timeRemaining + ' seconds';\n+    var timer = setInterval(function() {\n+        timeRemaining--;\n+        timerEl.textContent = 'Time Remaining: ' + timeRemaining + ' seconds';\n+        if (timeRemaining <= 0) {\n+            clearInterval(timer);\n+            endQuiz();\n+        }\n+    }, 1000);\n+}\n+\n function loadPreviousQuestion() {\n     if(currentQuestion > 0){\n         currentQuestion--;\n         loadQuestion(currentQuestion);\n@@ -98,8 +121,9 @@\n     score = 0;\n     currentQuestion = 0;\n     nextButton.textContent = 'Next';\n     quizContainer.style.display = '';\n+    timeRemaining = totQuestions * 30;\n     fetchQuestions();\n }\n \n loadQuestion(currentQuestion);\n"
                },
                {
                    "date": 1690884029620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n var questions = [];\n var currentQuestion = 0;\n var score = 0;\n var totQuestions = 0;\n-var timeRemaining = 0;  // Will be set after fetching questions\n+var timeRemaining = 0; // Will be set after fetching questions\n+var selectedChoices = []; // Keep track of selected choices for each question\n \n var quizContainer = document.getElementById('quiz-container');\n var questionEl = document.getElementById('question');\n var choicesEl = document.getElementById('choices');\n@@ -14,9 +15,9 @@\n var progressBar = document.getElementById('progress');\n var scoreEl = document.getElementById('score');\n var timerEl = document.getElementById('timer');\n \n-fetch('https://opentdb.com/api.php?amount=15&category=17&difficulty=medium&type=multiple')\n+fetch('https://opentdb.com/api.php?amount=10&type=multiple')\n     .then(response => response.json())\n     .then(data => {\n         questions = data.results.map(item => ({\n             question: item.question,\n@@ -60,23 +61,27 @@\n         choicesEl.appendChild(choice);\n         choice.addEventListener(\"click\", function(){\n             var selectedChoiceId = this.id;\n             var selectedChoiceIndex = parseInt(selectedChoiceId.replace('btn',''));\n+\n+            // Save the selected choice\n+            selectedChoices[currentQuestion] = selectedChoiceIndex;\n+\n+            // Check answer and update score\n             if(selectedChoiceIndex === q.answer){\n                 score++;\n             }\n-            currentQuestion++;\n-            if(currentQuestion == totQuestions - 1){\n-                nextButton.textContent = 'Finish';\n-            }\n-            if(currentQuestion == totQuestions){\n-                endQuiz();\n-                return;\n-            }\n-            loadQuestion(currentQuestion);\n+\n+            // Do not automatically move to the next question\n         });\n     }\n \n+    // Check if a choice has been selected for this question, and highlight it\n+    var selectedChoice = selectedChoices[questionIndex];\n+    if (selectedChoice !== undefined) {\n+        document.getElementById('btn' + selectedChoice).classList.add('selected');\n+    }\n+\n     // Update progress bar\n     progressBar.style.width = ((questionIndex + 1) / totQuestions * 100) + '%';\n \n     // Start timer\n@@ -125,15 +130,14 @@\n     timeRemaining = totQuestions * 30;\n     fetchQuestions();\n }\n \n-loadQuestion(currentQuestion);\n-\n+// Add event listeners for Next and Previous buttons\n nextButton.addEventListener(\"click\", function(){\n     if(currentQuestion < totQuestions - 1){\n         currentQuestion++;\n         loadQuestion(currentQuestion);\n-    } else if(currentQuestion == totQuestions - 1){\n+    } else {\n         endQuiz();\n     }\n });\n \n"
                },
                {
                    "date": 1690903801695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n var progressBar = document.getElementById('progress');\n var scoreEl = document.getElementById('score');\n var timerEl = document.getElementById('timer');\n \n-fetch('https://opentdb.com/api.php?amount=10&type=multiple')\n+fetch('https://opentdb.com/api.php?amount=15&category=23&difficulty=easy&type=multiple')\n     .then(response => response.json())\n     .then(data => {\n         questions = data.results.map(item => ({\n             question: item.question,\n@@ -88,19 +88,28 @@\n     startTimer();\n }\n \n function startTimer() {\n-    timerEl.textContent = 'Time Remaining: ' + timeRemaining + ' seconds';\n+    var minutes = Math.floor(timeRemaining / 60);\n+    var seconds = timeRemaining % 60;\n+    timerEl.textContent = 'Time Remaining: ' + formatTime(minutes) + ':' + formatTime(seconds);\n     var timer = setInterval(function() {\n         timeRemaining--;\n-        timerEl.textContent = 'Time Remaining: ' + timeRemaining + ' seconds';\n+        minutes = Math.floor(timeRemaining / 60);\n+        seconds = timeRemaining % 60;\n+        timerEl.textContent = 'Time Remaining: ' + formatTime(minutes) + ':' + formatTime(seconds);\n         if (timeRemaining <= 0) {\n             clearInterval(timer);\n             endQuiz();\n         }\n     }, 1000);\n }\n \n+// Helper function to format time\n+function formatTime(time) {\n+    return time < 10 ? '0' + time : time;\n+}\n+\n function loadPreviousQuestion() {\n     if(currentQuestion > 0){\n         currentQuestion--;\n         loadQuestion(currentQuestion);\n@@ -110,17 +119,25 @@\n function endQuiz() {\n     quizContainer.style.display = 'none';\n     resultCont.style.display = '';\n     scoreEl.textContent = 'Your Score: ' + score;\n-    retryButton = document.createElement(\"button\");\n-    retryButton.textContent = 'Try Again';\n-    retryButton.style.backgroundColor = '#007BFF';\n-    retryButton.style.color = 'white';\n-    retryButton.style.cursor = 'pointer';\n-    resultCont.appendChild(retryButton);\n-    retryButton.addEventListener(\"click\", resetQuiz);\n+\n+    // Check if a \"Try Again\" button already exists\n+    retryButton = document.getElementById('retry');\n+    if (!retryButton) {\n+        // If not, create a new one\n+        retryButton = document.createElement(\"button\");\n+        retryButton.id = 'retry';  // Add an ID to the \"Try Again\" button\n+        retryButton.textContent = 'Try Again';\n+        retryButton.style.backgroundColor = '#007BFF';\n+        retryButton.style.color = 'white';\n+        retryButton.style.cursor = 'pointer';\n+        resultCont.appendChild(retryButton);\n+        retryButton.addEventListener(\"click\", resetQuiz);\n+    }\n }\n \n+\n function resetQuiz() {\n     resultCont.style.display = 'none';\n     retryButton.remove();\n     score = 0;\n"
                },
                {
                    "date": 1690921329325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n var progressBar = document.getElementById('progress');\n var scoreEl = document.getElementById('score');\n var timerEl = document.getElementById('timer');\n \n-fetch('https://opentdb.com/api.php?amount=15&category=23&difficulty=easy&type=multiple')\n+fetch('https://opentdb.com/api.php?amount=15&category=23&difficulty=medium&type=multiple')\n     .then(response => response.json())\n     .then(data => {\n         questions = data.results.map(item => ({\n             question: item.question,\n"
                }
            ],
            "date": 1690832159672,
            "name": "Commit-0",
            "content": "var questions = [];\nvar currentQuestion = 0;\nvar score = 0;\nvar totQuestions = 0;\n\nvar quizContainer = document.getElementById('quiz-container');\nvar questionEl = document.getElementById('question');\nvar choicesEl = document.getElementById('choices');\nvar nextButton = document.getElementById('next');\nvar prevButton = document.getElementById('prev');\nvar resultCont = document.getElementById('result');\nvar retryButton;\nvar progressBar = document.getElementById('progress');\nvar scoreEl = document.getElementById('score');\n\nfetch('https://opentdb.com/api.php?amount=30&category=21&difficulty=medium&type=multiple')\n    .then(response => response.json())\n    .then(data => {\n        questions = data.results.map(item => ({\n            question: item.question,\n            choices: [...item.incorrect_answers, item.correct_answer],\n            answer: item.correct_answer\n        }));\n\n        // Shuffle choices for each question\n        questions.forEach(question => {\n            for (let i = question.choices.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [question.choices[i], question.choices[j]] = [question.choices[j], question.choices[i]];\n            }\n\n            // After shuffling, find the correct answer index\n            question.answer = question.choices.indexOf(question.answer);\n        });\n\n        // Now you have your questions array ready\n        totQuestions = questions.length;\n        loadQuestion(currentQuestion);\n    })\n    .catch(error => console.error(error));\n\nfunction loadQuestion (questionIndex) {\n    var q = questions[questionIndex];\n    questionEl.textContent = (questionIndex + 1) + '. ' + q.question;\n    choicesEl.innerHTML = '';\n    var buttonColors = [\"#007BFF\", \"#28a745\", \"#dc3545\", \"#ffc107\"]; // blue, green, red, yellow\n    for(var i = 0; i < q.choices.length; i++) {\n        var choice = document.createElement(\"button\");\n        choice.textContent = q.choices[i];\n        choice.id = 'btn' + i;\n        choice.style.backgroundColor = buttonColors[i];\n        choicesEl.appendChild(choice);\n        choice.addEventListener(\"click\", function(){\n            var selectedChoiceId = this.id;\n            var selectedChoiceIndex = parseInt(selectedChoiceId.replace('btn',''));\n            if(selectedChoiceIndex === q.answer){\n                score++;\n            }\n            currentQuestion++;\n            if(currentQuestion == totQuestions - 1){\n                nextButton.textContent = 'Finish';\n            }\n            if(currentQuestion == totQuestions){\n                endQuiz();\n                return;\n            }\n            loadQuestion(currentQuestion);\n        });\n    }\n\n    // Update progress bar\n    progressBar.style.width = ((questionIndex + 1) / totQuestions * 100) + '%';\n}\n\nfunction loadPreviousQuestion() {\n    if(currentQuestion > 0){\n        currentQuestion--;\n        loadQuestion(currentQuestion);\n    }\n}\n\nfunction endQuiz() {\n    quizContainer.style.display = 'none';\n    resultCont.style.display = '';\n    scoreEl.textContent = 'Your Score: ' + score;\n    retryButton = document.createElement(\"button\");\n    retryButton.textContent = 'Try Again';\n    retryButton.style.backgroundColor = '#007BFF';\n    retryButton.style.color = 'white';\n    retryButton.style.cursor = 'pointer';\n    resultCont.appendChild(retryButton);\n    retryButton.addEventListener(\"click\", resetQuiz);\n}\n\nfunction resetQuiz() {\n    resultCont.style.display = 'none';\n    retryButton.remove();\n    score = 0;\n    currentQuestion = 0;\n    nextButton.textContent = 'Next';\n    quizContainer.style.display = '';\n    fetchQuestions();\n}\n\nloadQuestion(currentQuestion);\n\nnextButton.addEventListener(\"click\", function(){\n    if(currentQuestion < totQuestions - 1){\n        currentQuestion++;\n        loadQuestion(currentQuestion);\n    } else if(currentQuestion == totQuestions - 1){\n        endQuiz();\n    }\n});\n\nprevButton.addEventListener(\"click\", loadPreviousQuestion);\n"
        }
    ]
}